geom_point(mapping = aes(x = displ, y = hwy color= drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color= drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color= year))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color= cty))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color= class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color= fl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size_sum= fl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size= fl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size= cty))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape= cty))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape= drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape= year))
rlang::last_error()
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape= fl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape= fl, size=cty))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape= fl, size=cty, colour=drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape= fl, size=cty, colour=drv))
?geom_point
?geom_point
p= ggplot(mtcars, aes(wt,mpg))
p +geom_point()
?geom_point
p + geom_point(aes(colour = (cyl)))
p + geom_point(aes(colour = factor(cyl)))
p + geom_point(aes(colour = (cyl)))
p + geom_point(aes(colour = (cyl)))
p + geom_point(aes(colour = factor(cyl)))
?geom_point
d <- ggplot(diamonds, aes(carat, price))
d + geom_point(alpha = 1/10)
d + geom_point(alpha = 1/100)
ggplot(mtcars, aes(wt, mpg)) +
geom_point(shape = 21, colour = "black", fill = "white", size = 5, stroke = 5)
ggplot(mtcars, aes(wt, mpg)) +
geom_point(shape = 21, colour = "black", fill = "white", size = 5, stroke = 1)
ggplot(mtcars, aes(wt, mpg)) +
geom_point(shape = 21, colour = "black", fill = "white", size = 5)
ggplot(mtcars, aes(wt, mpg)) +
geom_point(shape = 21, colour = "black", fill = "white")
ggplot(mtcars, aes(wt, mpg)) +
geom_point(shape = 21, colour = "black", fill = "white", stroke=6)
ggplot(mtcars, aes(wt, mpg)) +
geom_point(shape = 21, colour = "black", fill = "pink", size=15, stroke=6)
ggplot(mtcars, aes(wt, mpg)) +
geom_point(shape = 1, colour = "black", fill = "pink", size=15, stroke=6)
ggplot(mtcars, aes(wt, mpg)) +
geom_point(shape = 2, colour = "black", fill = "pink", size=15, stroke=6)
ggplot(mtcars, aes(wt, mpg)) +
geom_point(shape = 16, colour = "black", fill = "pink", size=15, stroke=6)
ggplot(mtcars, aes(wt, mpg)) +
geom_point(shape = 17, colour = "black", fill = "pink", size=15, stroke=6)
ggplot(mtcars, aes(wt, mpg)) +
geom_point(shape = 17, colour = "green", fill = "pink", size=15, stroke=6)
ggplot(mtcars, aes(wt, mpg)) +
geom_point(shape = 17, colour = "green", fill = "pink", size=15, stroke=3)
ggplot(mtcars, aes(wt, mpg)) +
geom_point(shape = 17, colour = "green", fill = "pink", size=6, stroke=3)
ggplot(mtcars, aes(wt, mpg)) +
geom_point(shape = 23, colour = "green", fill = "pink", size=6, stroke=3)
ggplot(mpg, aes(color=displ<5))
ggplot(mpg, aes(color=displ<5))+geom_point()
ggplot(mpg, aes(x = displ, y = hwy,color=displ<5))+geom_point()
print()
print(
ggplot(data = mpg)
+ geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_wrap(~fl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_wrap(~drv)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_wrap(~drv, nrow=)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_wrap(~drv, nrow=2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_wrap(~drv, nrow=3)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_wrap(~drv, nrow=1)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_wrap(~drv, nrow=2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_wrap(~class, nrow=2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_grid(class~drv, nrow=2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_grid(class~drv)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_grid(drv~class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_grid(.~drv)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_grid(drv~.)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_grid(.~drv)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_grid(class.~drv)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_grid(class~drv)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_grid(drv~class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_wrap(year)
mpg
glimpse(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_wrap(year)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_wrap(cty)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_wrap(~cty)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_wrap(~year)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_grid(.~cty)
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_grid(drv~cty)
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_grid(drv~cty)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_grid(drv~cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_grid(drv~cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~drv)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(drv~)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~drv)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(mpg, aes)
ggplot(mpg, aes(x=displ, y=hwy, color=class))
ggplot(mpg, aes(x=displ, y=hwy, color=class)) +geom_point()
?facet_wrap
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_grid(drv~cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_grid(year~cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_grid(year~class)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +facet_grid(class~year)
ggplot(mpg, aes(x=displ, y=hwy)) + geo_point()
library(tidyverse)
ggplot(mpg, aes(x=displ, y=hwy)) + geo_point()
ggplot(mpg, aes(x=displ, y=hwy)) + geom_point()
ggplot(mpg, aes(x=displ, y=hwy)) + geom_smooth()
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype=drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype=drv))
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv),
show.legend = FALSE
)
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg,aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot(data = mpg,mapping=aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot(data = mpg,mapping=aes(x = displ, y = hwy)) +
geom_point(aes(color=class)) +
geom_smooth()
ggplot(data = mpg,mapping=aes(x = displ, y = hwy)) +
geom_point(aes(color=class)) +
geom_smooth(data=filter(mpg,class=="subcompact"))
ggplot(data = mpg,mapping=aes(x = displ, y = hwy)) +
geom_point(aes(color=class)) +
geom_smooth(data=filter(mpg,class=="subcompact", se=F))
ggplot(data = mpg,mapping=aes(x = displ, y = hwy)) +
geom_point(aes(color=class)) +
geom_smooth(data=filter(mpg,class=="subcompact", se==F))
ggplot(data = mpg,mapping=aes(x = displ, y = hwy)) +
geom_point(aes(color=class)) +
geom_smooth(data=filter(mpg,class=="subcompact"), se==F)
ggplot(data = mpg,mapping=aes(x = displ, y = hwy)) +
geom_point(aes(color=class)) +
geom_smooth(data=filter(mpg,class=="subcompact"), se=F)
ggplot(mpg, mapping=aes(x=displ, y=hwy)) + geom_line()
ggplot(mpg, mapping=aes(x=displ, y=hwy)) + geom_histogram()
ggplot(mpg, mapping=aes(x=displ, y=hwy)) + geom_point()
ggplot(mpg, mapping=aes(x=displ, y=hwy)) + geom_area()
ggplot(mpg, mapping=aes(x=displ, y=hwy)) + geom_histogram()
ggplot(mpg, mapping=aes(x=displ)) + geom_histogram()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) +
geom_point() +
geom_smooth()
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv), show legend) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv), show.legend=F) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv), show.legend=F) +
geom_point() +
geom_smooth(se = FALSE, show.legend=F)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv), show.legend=F) +
geom_point(show.legend = F) +
geom_smooth(se = FALSE, show.legend=F)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv), show.legend=F) +
geom_point(show.legend = F) +
geom_smooth(se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot() +
geom_point(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
ggplot() +
geom_point(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy))
ggplot(data=mpg, mapping=aes(x=displ, y=hwy)) + geom_point() + geom_line()
ggplot(data=mpg, mapping=aes(x=displ, y=hwy)) + geom_point() + geom_smooth()
ggplot(data=mpg, mapping=aes(x=displ, y=hwy)) + geom_point() + geom_smooth(se=F)
ggplot(data=mpg, mapping=aes(x=displ, y=hwy, ), show.legend=F) + geom_point() + geom_smooth(se=F)
ggplot(data=mpg, mapping=aes(x=displ, y=hwy, tipeline=drv), show.legend=F) + geom_point() + geom_smooth(se=F)
ggplot(data=mpg, mapping=aes(x=displ, y=hwy, color=drv), show.legend=F) + geom_point() + geom_smooth(se=F)
ggplot() + geom_point(data=mpg, mapping=aes(x=displ, y=hwy, color=drv) + geom_smooth(data=mpg, mapping=aes(x=displ, y=hwy), se=F)
)
ggplot() + geom_point(data=mpg, mapping=aes(x=displ, y=hwy, color=drv)) + geom_smooth(data=mpg, mapping=aes(x=displ, y=hwy), se=F)
ggplot() + geom_point(data=mpg, mapping=aes(x=displ, y=hwy, color=drv)) + geom_smooth(data=mpg, mapping=aes(x=displ, y=hwy, tipeline=drv), se=F)
ggplot() + geom_point(data=mpg, mapping=aes(x=displ, y=hwy, color=drv)) + geom_smooth(data=mpg, mapping=aes(x=displ, y=hwy, linetype=drv), se=F)
ggplot() +
geom_point(data = mpg, mapping = aes(x = displ, y = hwy), fill="green")
ggplot() + geom_point(data=mpg, mapping=aes(x=displ, y=hwy, color=drv))
?geom_point
ggplot() + geom_point(data=mpg, mapping=aes(x=displ, y=hwy, color=drv),shape = 21, colour = "black", fill = "white", size = 5, stroke = 5))
ggplot() + geom_point(data=mpg, mapping=aes(x=displ, y=hwy, color=drv),shape = 21, colour = "black", fill = "white", size = 5, stroke = 5)
ggplot() + geom_point(data=mpg, mapping=aes(x=displ, y=hwy, color=drv),shape = 21,, fill = "white", size = 5, stroke = 5)
ggplot() + geom_point(data=mpg, mapping=aes(x=displ, y=hwy, color=drv),shape = 21, fill = "white", size = 2, stroke = 5)
ggplot() + geom_point(data=mpg, mapping=aes(x=displ, y=hwy, color=drv),shape = 21, fill = "white", size = 1, stroke = 5)
ggplot() + geom_point(data=mpg, mapping=aes(x=displ, y=hwy, color=drv),shape = 21, fill = "white", size = 1, stroke = 2)
ggplot() + geom_point(data=mpg, mapping=aes(x=displ, y=hwy, color=drv),shape = 21, fill = "white", stroke = 2)
ggplot() + geom_point(data=mpg, mapping=aes(x=displ, y=hwy, color=drv),shape = 21, fill = "white", stroke = 0)
ggplot() + geom_point(data=mpg, mapping=aes(x=displ, y=hwy, color=drv),shape = 21, fill = "white", stroke = 2)
ggplot() + geom_point(data=mpg, mapping=aes(x=displ, y=hwy, color=drv),shape = 21, fill = "white", stroke = 2) ggplot(mpg, aes(x = displ, y = hwy)) +
geom_smooth(mapping = aes(group = drv), se = FALSE) +
geom_point()
ggplot() + geom_point(data=mpg, mapping=aes(x=displ, y=hwy, color=drv),shape = 21, fill = "white", stroke = 2) ggplot(mpg, aes(x = displ, y = hwy)) +
geom_smooth(mapping = aes(group = drv), se = FALSE) +
geom_point()
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_smooth(mapping = aes(group = drv), se = FALSE) +
geom_point()
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(size = 4, color = "white") +
geom_point(aes(colour = drv))
diamonds
diamonds
ggplot(data=diamonds) + geom_bar(aes(x=cut))
ggplot(data=diamonds) + geom_bar(mapping=aes(x=cut))
?stat_count()
help(stat_count())
help("stat_count()")
?stat_count()
ggplot(data = diamonds) +
stat_count(mapping = aes(x = cut))
demo <- tribble(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
ggplot(data = demo) +
geom_bar(mapping = aes(x = cut, y = freq), stat = "identity")
demo <- tribble(
~cut,         ~freq,
"Fair",       1610,
"Good",       4906,
"Very Good",  12082,
"Premium",    13791,
"Ideal",      21551
)
ggplot(data = demo) +
geom_bar(mapping = aes(x = cut, y = freq))
?stat
ggplot(diamonds) +geom_bar(mapping = aes(x=cut, y=stat(prop)))
ggplot(diamonds) +geom_bar(mapping = aes(x=cut, y=stat(prop)), group=1)
ggplot(diamonds) +geom_bar(mapping = aes(x=cut, y=stat(prop), group=1))
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
)
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median
)
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.min = min,
fun = median
)
##Repositório usado com base em : "https://stackoverflow.com/questions/8475102/set-default-cran-mirror-permanent-in-r"
install.packages("readxl",repos = "http://cran.us.r-project.org")
library(readxl)
setwd("C:\Users\moise\Google Drive\FGV\3º Período\R\trabalho")
setwd("\Users\moise\Google Drive\FGV\3º Período\R\trabalho")
setwd("Users\moise\Google Drive\FGV\3º Período\R\trabalho")
setwd("C:\Users\moise\Google Drive\FGV\3º Período\R\trabalho")
getwd()
setwd("C:\Users\moise\GoogleDrive\FGV\3º Período\R\trabalho")
setwd("C:/Users/moise/GoogleDrive/FGV/3º Período/R/trabalho")
getwd()
View(temperatura)
setwd("C:/Users/moise/GoogleDrive/FGV/3º Período/R/trabalho")
work_dir <-"C:/Users/moise/GoogleDrive/FGV/3º Período/R/trabalho"
setwd(dork_dir)
setwd(work_dir)
work_dir <-"C:/Users/moise/GoogleDrive/FGV/3º Período/R/trabalho"
work_dir <-"C:/Users/moise/Google Drive/FGV/3º Período/R/trabalho"
setwd(work_dir)
library(readxl)
## Leitura diretamente do Excel
dados <- read.table("BTC-USD.csv", header = TRUE,
sep = ";", dec = ",")
## Leitura diretamente do Excel
dados <- read.table("BTC-USD.csv", header = TRUE,
sep = ";", dec = ",")
library(BatchGetSymbols)
library(tidyverse)
library(dplyr)
library(corrplot)
library(readxl)
## Leitura diretamente do Excel
dados_10 <- read.table("BTC_ETH_USD.csv", header = TRUE,
sep = ";", dec = ",")
collrrigido <- colnames(dados_10) #A coluna Data aparece como "..í.Data", vamos arrumar isso.
collrrigido[1] <- "Data"
names(dados_10) <- collrrigido #arrumado
dados_20 <- read.table("Pesquisas.csv", header = TRUE,
sep = ";", dec = ",") #aqui estão os dados disponibilizados pelo GT (GOOGLE TRENDS)
dados_limpos0 <- merge(dados_10,dados_20, by = "Data") #vamos usar juntar os dados de Preço e Pesquisa
op <- par(mar = c(3, 4, 4, 4))
knitr::opts_chunk$set(echo = TRUE)
ggplot() + geom_line(data = BTC, aes(x = Date, y =Close, group=1)) + geom_line(data=ETH,aes(x = Date, y =Close, group=2), color="blue")
library(lubridate)
library(readxl)
library(corrplot)
library(tidyverse)
library(Hmisc)
library(PerformanceAnalytics)
ETH_sujo=read.table("coin_Ethereum.csv", header = TRUE, sep = ",", dec = ".")
BTC_sujo=read.table("coin_Bitcoin.csv", header = TRUE, sep = ",", dec = ".")
ADA_sujo=read.table("coin_Cardano.csv", header = TRUE, sep = ",", dec = ".")
LTC_sujo=read.table("coin_Litecoin.csv", header = TRUE, sep = ",", dec = ".")
#```
#BTC_sujo$Date = ymd_hms(BTC_sujo$Date)
#ETH_sujo$Date = ymd_hms(ETH_sujo$Date)
#ADA_sujo$Date = ymd_hms(ADA_sujo$Date)
#LTC_sujo$Date = ymd_hms(LTC_sujo$Date)
BTC = BTC_sujo[BTC_sujo$Date > ADA_sujo$Date[1],]
ETH = ETH_sujo[ETH_sujo$Date > ADA_sujo$Date[1],]
ADA = ADA_sujo[ADA_sujo$Date > ADA_sujo$Date[1],]
LTC = LTC_sujo[LTC_sujo$Date > ADA_sujo$Date[1],]
df_crip=data.frame("BTC"=BTC$Close, "ETH"=ETH$Close, "ADA"=ADA$Close, "LTC"=LTC$Close)
df_crip=data.frame("BTC"=BTC$Close, "ETH"=ETH$Close, "ADA"=ADA$Close, "LTC"=LTC$Close)
correlacao_criptos = cor(df_crip)
```{r btc, echo=TRUE, paged.print=TRUE}
ggplot() + geom_line(data = BTC, aes(x = Date, y =Close, group=1)) + geom_line(data=ETH,aes(x = Date, y =Close, group=2), color="blue")
ggplot() + geom_line(data = BTC, aes(x = Date, y =Close, group=1)) + geom_line(data=ETH,aes(x = Date, y =Close, group=2), color="blue")
ggplot() + geom_line(data = BTC, aes(x = Date, y =Close, group=1)) + geom_line(data=ETH,aes(x = Date, y =Close, group=2), color="blue")
ggplot() + geom_line(data = BTC, aes(x = Date, y =Close, group=1)) + geom_line(data=ETH,aes(x = Date, y =Close, group=2), color="blue")
ggplot() + geom_line(data = BTC, aes(x = Date, y =Close, group=1)) + geom_line(data=ETH,aes(x = Date, y =Close, group=2), color="blue")
ggplot() + geom_line(data = BTC, aes(x = Date, y =Close, group=1)) + geom_line(data=ETH,aes(x = Date, y =Close, group=2), color="blue")
ggplot() + geom_line(data = BTC, aes(x = Date, y =Close, group=1)) + geom_line(data=ETH,aes(x = Date, y =Close, group=2), color="blue")
ggplot() + geom_line(data = BTC, aes(x = Date, y =Close, group=1)) + geom_line(data=ETH,aes(x = Date, y =Close, group=2), color="blue")
BTC = BTC_sujo[BTC_sujo$Date > ADA_sujo$Date[1],]
ETH = ETH_sujo[ETH_sujo$Date > ADA_sujo$Date[1],]
ADA = ADA_sujo[ADA_sujo$Date > ADA_sujo$Date[1],]
LTC = LTC_sujo[LTC_sujo$Date > ADA_sujo$Date[1],]
ETH_sujo=read.table("coin_Ethereum.csv", header = TRUE, sep = ",", dec = ".")
getwd()
setwd("C:/Users/moise/Google Drive/FGV/3º Período/R/trabalho")
#aave=read.table("coin_Aave.csv", header = TRUE, sep = ",", dec = ".")
ETH_sujo=read.table("coin_Ethereum.csv", header = TRUE, sep = ",", dec = ".")
BTC_sujo=read.table("coin_Bitcoin.csv", header = TRUE, sep = ",", dec = ".")
ADA_sujo=read.table("coin_Cardano.csv", header = TRUE, sep = ",", dec = ".")
LTC_sujo=read.table("coin_Litecoin.csv", header = TRUE, sep = ",", dec = ".")
#```
#BTC_sujo$Date = ymd_hms(BTC_sujo$Date)
#ETH_sujo$Date = ymd_hms(ETH_sujo$Date)
#ADA_sujo$Date = ymd_hms(ADA_sujo$Date)
#LTC_sujo$Date = ymd_hms(LTC_sujo$Date)
BTC = BTC_sujo[BTC_sujo$Date > ADA_sujo$Date[1],]
ETH = ETH_sujo[ETH_sujo$Date > ADA_sujo$Date[1],]
ADA = ADA_sujo[ADA_sujo$Date > ADA_sujo$Date[1],]
LTC = LTC_sujo[LTC_sujo$Date > ADA_sujo$Date[1],]
df_crip=data.frame("BTC"=BTC$Close, "ETH"=ETH$Close, "ADA"=ADA$Close, "LTC"=LTC$Close)
df_crip=data.frame("BTC"=BTC$Close, "ETH"=ETH$Close, "ADA"=ADA$Close, "LTC"=LTC$Close)
correlacao_criptos = cor(df_crip)
```{r g, echo=TRUE, paged.print=TRUE}
ggplot() + geom_line(data = BTC, aes(x = Date, y =Close, group=1)) + geom_line(data=ETH,aes(x = Date, y =Close, group=2), color="blue")
ggplot() + geom_line(data = BTC, aes(x = Date, y =Close, group=1)) + geom_line(data=ETH,aes(x = Date, y =Close, group=2), color="blue")
corrplot::corrplot(correlacao_criptos)
knitr::opts_chunk$set(echo = TRUE)
ggplot() + geom_line(data = BTC, aes(x = Date, y =Close, group=1)) + geom_line(data=ETH,aes(x = Date, y =Close, group=2), color="blue")
corrplot::corrplot(correlacao_criptos)
knitr::opts_chunk$set(echo = TRUE)
ETH_sujo=read.table("coin_Ethereum.csv", header = TRUE, sep = ",", dec = ".")
BTC_sujo=read.table("coin_Bitcoin.csv", header = TRUE, sep = ",", dec = ".")
ADA_sujo=read.table("coin_Cardano.csv", header = TRUE, sep = ",", dec = ".")
LTC_sujo=read.table("coin_Litecoin.csv", header = TRUE, sep = ",", dec = ".")
#```
#BTC_sujo$Date = ymd_hms(BTC_sujo$Date)
#ETH_sujo$Date = ymd_hms(ETH_sujo$Date)
#ADA_sujo$Date = ymd_hms(ADA_sujo$Date)
#LTC_sujo$Date = ymd_hms(LTC_sujo$Date)
BTC = BTC_sujo[BTC_sujo$Date > ADA_sujo$Date[1],]
ETH = ETH_sujo[ETH_sujo$Date > ADA_sujo$Date[1],]
ADA = ADA_sujo[ADA_sujo$Date > ADA_sujo$Date[1],]
LTC = LTC_sujo[LTC_sujo$Date > ADA_sujo$Date[1],]
df_crip=data.frame("BTC"=BTC$Close, "ETH"=ETH$Close, "ADA"=ADA$Close, "LTC"=LTC$Close)
df_crip=data.frame("BTC"=BTC$Close, "ETH"=ETH$Close, "ADA"=ADA$Close, "LTC"=LTC$Close)
correlacao_criptos = cor(df_crip)
ggplot() + geom_line(data = BTC, aes(x = Date, y =Close, group=1)) + geom_line(data=ETH,aes(x = Date, y =Close, group=2), color="blue")
corrplot::corrplot(correlacao_criptos)
knitr::opts_chunk$set(echo = TRUE)
correlacao_criptos2 = Hmisc::rcorr(as.matrix(df_crip))
correlacao_criptos2r #matriz de coeficiente de correlação
correlacao_criptos2 = Hmisc::rcorr(as.matrix(df_crip))
correlacao_criptos2r #matriz de coeficiente de correlação
correlacao_criptos2$r #matriz de coeficiente de correlação
correlacao_criptos2$P #matriz de valor p
correlacao_criptos2$P #matriz de valor p
correlacao_criptos2$n #matriz de quantidade de valores comparados
correlacao_criptos2 = Hmisc::rcorr(as.matrix(df_crip))
correlacao_criptos2$r #matriz de coeficiente de correlação
correlacao_criptos2$P #matriz de valor p
correlacao_criptos2$n #matriz de quantidade de valores comparados
corrplot(correlacao_criptos2$r, p.mat=correlacao_criptos2$P, sig.level=0.005) #correlações cujo valor p seja maior que 0.005 aparecerão com um x
chart.Correlation(df_crip)
#df_crip=data.frame("BTC"=BTC$Close, "ETH"=ETH$Close, "ADA"=ADA$Close, "LTC"=LTC$Close)
#PerformanceAnalytics::chart.Correlation(df_crip)
#df_crip=data.frame("BTC"=BTC$Close, "ETH"=ETH$Close, "ADA"=ADA$Close, "LTC"=LTC$Close)
#PerformanceAnalytics::chart.Correlation(df_crip)
#df_crip=data.frame("BTC"=BTC$Close, "ETH"=ETH$Close, "ADA"=ADA$Close, "LTC"=LTC$Close)
#PerformanceAnalytics::chart.Correlation(df_crip)
#df_crip=data.frame("BTC"=BTC$Close, "ETH"=ETH$Close, "ADA"=ADA$Close, "LTC"=LTC$Close)
#PerformanceAnalytics::chart.Correlation(df_crip)
df_crip=data.frame("BTC"=BTC$Close, "ETH"=ETH$Close, "ADA"=ADA$Close, "LTC"=LTC$Close)
PerformanceAnalytics::chart.Correlation(df_crip)
